

<h2>Registrarse</h2>

<EditForm EditContext="editFormContext" OnValidSubmit="HandleRegister">

    <DataAnnotationsValidator/>

        <div>
            <label for="Email">Correo electronico: </label>
            <div>
                <InputText 
                    id="Email"
                    @bind-Value="registerDto.Email" 
                    type="email"
                    class="form-control col-sm-3" 
                ></InputText>
                <ValidationMessage For="(() => registerDto.Email)"/>
             </div>
        </div>

        <div>
            <label for="NameCompleted">Nombere Completo: </label>
            <div>
                <InputText 
                    id="NameCompleted"
                    @bind-Value="registerDto.NameCompleted" 
                    type="text"
                    class="form-control col-sm-3" 
                ></InputText>
                <ValidationMessage For="(() => registerDto.NameCompleted)"/>
             </div>
        </div> 
        
        <div>
            <label for="UserName">Usuario: </label>
            <div>
                <InputText 
                    id="UserName"
                    @bind-Value="registerDto.UserName" 
                    type="text"
                    class="form-control col-sm-3" 
                ></InputText>
                <ValidationMessage For="(() => registerDto.UserName)"/>
             </div>
        </div>

        <div>
            <label for="Password">Contraseña: </label>
            <div>
                <InputText 
                    id="Passowrd"
                    @bind-Value="registerDto.Password"  
                    type="password"
                    class="form-control col-sm-3" 
                ></InputText>
                <ValidationMessage For="(() => registerDto.Password)"/>
            </div>
        </div>
        
        <div>
            <label for="ConfirmPassword">Confirmar contraseña: </label>
            <div>
                <InputText 
                    id="ConfirmPassword"
                    @bind-Value="registerDto.ConfirmPassword"  
                    type="password"
                    class="form-control col-sm-3" 
                ></InputText>
                <ValidationMessage For="(() => registerDto.ConfirmPassword)"/>    
            </div>
        </div>

        <br />
    
        <button type="submit" class="btn btn-primary" disabled="@formInvalid">ASDA</button>
        @*<button type="button" class="btn btn-danger" @onclick="DeleteHero">Eliminar Heroe</button>*@


</EditForm>

@code {

    #region VARIABLES

        private EditContext editFormContext;
        private bool formInvalid = false;
        private RegisterDto registerDto { get; set; } = new RegisterDto();

    #endregion

    #region Ciclo de vida del componente.// "CONSTRUCTOR"

        protected override void OnInitialized()
        {
            editFormContext = new(registerDto);
            editFormContext.OnFieldChanged += HandleFieldFormChanged;
        }

    #endregion


    #region METODOS 


        private void HandleFieldFormChanged(object? sender, FieldChangedEventArgs e)
        {
            if (editFormContext is not null)
            {
                formInvalid = !editFormContext.Validate();
                StateHasChanged();
            }
        }


        private void HandleRegister()
        {
            Console.WriteLine($"aaa {registerDto.Password}");
            Console.WriteLine($"aaa page {registerDto.Email}");

            //Console.WriteLine($"True or False: {bln}");
        }














    #endregion



      
}
